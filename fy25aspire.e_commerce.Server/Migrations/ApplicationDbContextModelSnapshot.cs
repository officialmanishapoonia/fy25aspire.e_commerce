// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fy25aspire.e_commerce.Server.Data;

#nullable disable

namespace fy25aspire.e_commerce.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.AddressDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "123 Main St",
                            AddressType = "Home",
                            City = "Anytown",
                            Country = "USA",
                            CreatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5206),
                            Phone = "123-456-7890",
                            State = "Anystate",
                            UpdatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5207),
                            UserId = "1",
                            ZipCode = "12345"
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.CartDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalQuantity")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            TotalAmount = 199.0,
                            TotalQuantity = 2.0,
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.CartItemDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CartId = "1",
                            CreatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5156),
                            CreatedBy = "user1",
                            ProductId = "1",
                            Quantity = 2.0,
                            UpdatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5156),
                            UpdatedBy = "user1"
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.OrderDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("bit");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5087),
                            CreatedBy = "user1",
                            OrderStatus = "Pending",
                            PaymentStatus = false,
                            TotalAmount = 199,
                            UpdatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5088),
                            UpdatedBy = "user1",
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.OrderItemDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedBy = "user1",
                            OrderId = "1",
                            ProductId = "1",
                            UpdatedBy = "user1",
                            createdAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5113),
                            quantity = 2,
                            updatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5114)
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.ProductDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("StockQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Category = "Electronics",
                            CreatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5063),
                            CreatedBy = "user1",
                            Description = "This is a sample product.",
                            ImageUrl = "http://example.com/product.jpg",
                            Name = "Sample Product",
                            Price = 99.989999999999995,
                            StockQuantity = 100.0,
                            UpdatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5064),
                            UpdatedBy = "user1",
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.ReviewDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5225),
                            ProductId = "1",
                            Rating = 5,
                            Review = "Great product!",
                            UpdatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(5226),
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.UserDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(4922),
                            Email = "user1@example.com",
                            Password = "password1",
                            Role = "Customer",
                            UpdatedAt = new DateTime(2024, 9, 4, 22, 48, 44, 934, DateTimeKind.Local).AddTicks(4938),
                            UserName = "user1"
                        });
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.AddressDTO", b =>
                {
                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.UserDTO", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.CartDTO", b =>
                {
                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.UserDTO", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.CartItemDTO", b =>
                {
                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.CartDTO", "cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.ProductDTO", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("cart");

                    b.Navigation("product");
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.OrderDTO", b =>
                {
                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.UserDTO", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.OrderItemDTO", b =>
                {
                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.OrderDTO", "order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.ProductDTO", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.ProductDTO", b =>
                {
                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.UserDTO", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("fy25aspire.e_commerce.Server.Data.Models.ReviewDTO", b =>
                {
                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.ProductDTO", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("fy25aspire.e_commerce.Server.Data.Models.UserDTO", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
